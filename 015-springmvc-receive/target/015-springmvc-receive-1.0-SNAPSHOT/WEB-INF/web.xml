<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0"
         metadata-complete="true">


    <!--先声明，注册springmvc核心对象DispatcherServlet
        DispatcherServlet在创建过程中 会同时创建springmvc容器对象，读取配置文件，把配置文件对象
        都创建好。
        servlet的初始化会执行init()方法。dispatcherServlet在init()方法中{
        }
    -->
    <servlet>
        <servlet-name>DispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--
            Could not open ServletContext resource [/WEB-INF/ser-servlet.xml]
            在DispatcherServlet创建时会默认读取配置文件 默认地址：/WEB-INF/.....-servlet.xml
        -->
        <!--修改默认配置文件地址-->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
        <!--Tomcat启动后 创建servlet对象
            load-on-startup:数字越小代表越早创建
            -->
        <load-on-startup>1</load-on-startup>
    </servlet>


    <!--因为中央调度器没有处理静态资源的能力-->
    <!--拦截路径-->
    <servlet-mapping>
        <servlet-name>DispatcherServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>


    <!--乱码处理-->
    <!--Spring自带的CharacterEncodingFilter过滤器-->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

</web-app>
