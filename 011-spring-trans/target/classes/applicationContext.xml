<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!--扫描组件，让Spring托管-->
    <context:component-scan base-package="com.bjpowernode.service"/>
    <!--加载配置-->
    <!--
    ignore-unresolvable为true时，配置文件${}找不到对应占位符的值，直接赋值'${}'
    -->
    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>


    <!--配置数据源druid-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <!--driverClassName可以不写，智能匹配-->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>


    <!--创建sqlSessionFactory对象-->
    <!-- 配置 SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--读取mybatis的主配置-->
        <property name="configLocation" value="classpath:mybatis.xml"/>
        <!--衔接数据源，目前使用的是数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--批量起别名,放在beans包中【也就是实体】-->
        <property name="typeAliasesPackage" value="com.bjpowernode.beans"/>
    </bean>


    <!-- 创建dao对象,使用SqlSession的getMapper(StuDao.class)方法
          MapperScannerConfigurer：内部调用getMapper()为每个接口创建代理类对象
     -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注册MyBatis的映射文件-->
        <!--MapperScannerConfigurer会扫描这个包中所有的接口
        把每个接口都执行一次getMapper()方法，得到对象，把每个对象都放进容器内
        -->
        <property name="basePackage" value="com.bjpowernode.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>



    <!--使用spring事务处理-->
    <!--1.声明事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--连接数据库，指定数据源-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--2.开启事务注解驱动，告诉spring使用注解管理事务，创建代理对象
        transaction-manager:事务管理器ID

    -->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>


</beans>